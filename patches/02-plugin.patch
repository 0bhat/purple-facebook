diff -r f80258f7ce6f libpurple/protocols/facebook/facebook.c
--- a/libpurple/protocols/facebook/facebook.c	Sun Jul 26 16:51:03 2015 -0400
+++ b/libpurple/protocols/facebook/facebook.c	Sun Jul 26 21:11:03 2015 -0400
@@ -440,7 +440,7 @@
 	GSList *select = NULL;
 	PurpleConnection *gc;
 
-	if (!PURPLE_IS_BUDDY(node)) {
+	if (!PURPLE_BLIST_NODE_IS_BUDDY(node)) {
 		return;
 	}
 
@@ -586,7 +586,7 @@
 	PurpleConnection *gc;
 	PurpleMenuAction *act;
 
-	if (!PURPLE_IS_BUDDY(node)) {
+	if (!PURPLE_BLIST_NODE_IS_BUDDY(node)) {
 		return NULL;
 	}
 
@@ -609,7 +609,8 @@
 }
 
 static gint
-fb_im_send(PurpleConnection *gc, PurpleMessage *msg)
+fb_im_send(PurpleConnection *gc, const gchar *who, const gchar *msg,
+           PurpleMessageFlags flags)
 {
 	const gchar *name;
 	const gchar *text;
@@ -621,10 +622,10 @@
 	fata = purple_connection_get_protocol_data(gc);
 	api = fb_data_get_api(fata);
 
-	name = purple_message_get_recipient(msg);
+	name = who;
 	uid = FB_ID_FROM_STR(name);
 
-	text = purple_message_get_contents(msg);
+	text = msg;
 	sext = purple_markup_strip_html(text);
 	fb_api_message(api, uid, FALSE, sext);
 	g_free(sext);
@@ -746,7 +747,8 @@
 }
 
 static gint
-fb_chat_send(PurpleConnection *gc, gint id, PurpleMessage *msg)
+fb_chat_send(PurpleConnection *gc, gint id, const gchar *msg,
+             PurpleMessageFlags flags)
 {
 	const gchar *name;
 	const gchar *text;
@@ -765,15 +767,15 @@
 	name = purple_conversation_get_name(PURPLE_CONVERSATION(chat));
 	tid = FB_ID_FROM_STR(name);
 
-	text = purple_message_get_contents(msg);
+	text = msg;
 	sext = purple_markup_strip_html(text);
 	fb_api_message(api, tid, TRUE, sext);
 	g_free(sext);
 
 	name = purple_account_get_username(acct);
 	purple_serv_got_chat_in(gc, id, name,
-				purple_message_get_flags(msg),
-	                        purple_message_get_contents(msg),
+				flags,
+	                        msg,
 	                        time(NULL));
 	return 0;
 }
@@ -927,98 +929,6 @@
 }
 
 static void
-facebook_protocol_init(PurpleProtocol *protocol)
-{
-	GList *opts = NULL;
-	PurpleAccountOption *opt;
-
-	protocol->id      = "prpl-facebook";
-	protocol->name    = "Facebook";
-	protocol->options = OPT_PROTO_CHAT_TOPIC;
-
-	opt = purple_account_option_bool_new(_("Mark messages as read"),
-	                                     "mark-read", TRUE);
-	opts = g_list_prepend(opts, opt);
-
-	opt = purple_account_option_bool_new(_("Open new group chats with "
-	                                       "incoming messages"),
-	                                     "group-chat-open", TRUE);
-	opts = g_list_prepend(opts, opt);
-	protocol->account_options = g_list_reverse(opts);
-}
-
-static void
-facebook_protocol_class_init(PurpleProtocolClass *klass)
-{
-	klass->login        = fb_login;
-	klass->close        = fb_close;
-	klass->status_types = fb_status_types;
-	klass->list_icon    = fb_list_icon;
-}
-
-static void
-facebook_protocol_client_iface_init(PurpleProtocolClientIface *iface)
-{
-	iface->blist_node_menu = fb_client_blist_node_menu;
-	iface->offline_message = fb_client_offline_message;
-}
-
-static void
-facebook_protocol_server_iface_init(PurpleProtocolServerIface *iface)
-{
-
-}
-
-static void
-facebook_protocol_im_iface_init(PurpleProtocolIMIface *iface)
-{
-	iface->send        = fb_im_send;
-	iface->send_typing = fb_im_send_typing;
-}
-
-static void
-facebook_protocol_chat_iface_init(PurpleProtocolChatIface *iface)
-{
-	iface->info          = fb_chat_info;
-	iface->info_defaults = fb_chat_info_defaults;
-	iface->join          = fb_chat_join;
-	iface->get_name      = fb_chat_get_name;
-	iface->invite        = fb_chat_invite;
-	iface->send          = fb_chat_send;
-	iface->set_topic     = fb_chat_set_topic;
-}
-
-static void
-facebook_protocol_privacy_iface_init(PurpleProtocolPrivacyIface *iface)
-{
-
-}
-
-static void
-facebook_protocol_roomlist_iface_init(PurpleProtocolRoomlistIface *iface)
-{
-	iface->get_list = fb_roomlist_get_list;
-	iface->cancel   = fb_roomlist_cancel;
-}
-
-PURPLE_DEFINE_TYPE_EXTENDED(
-	FacebookProtocol, facebook_protocol, PURPLE_TYPE_PROTOCOL, 0,
-
-	PURPLE_IMPLEMENT_INTERFACE_STATIC(PURPLE_TYPE_PROTOCOL_CLIENT_IFACE,
-	                                  facebook_protocol_client_iface_init)
-	PURPLE_IMPLEMENT_INTERFACE_STATIC(PURPLE_TYPE_PROTOCOL_SERVER_IFACE,
-	                                  facebook_protocol_server_iface_init)
-	PURPLE_IMPLEMENT_INTERFACE_STATIC(PURPLE_TYPE_PROTOCOL_IM_IFACE,
-	                                  facebook_protocol_im_iface_init)
-	PURPLE_IMPLEMENT_INTERFACE_STATIC(PURPLE_TYPE_PROTOCOL_CHAT_IFACE,
-	                                  facebook_protocol_chat_iface_init)
-	PURPLE_IMPLEMENT_INTERFACE_STATIC(PURPLE_TYPE_PROTOCOL_PRIVACY_IFACE,
-	                                  facebook_protocol_privacy_iface_init)
-	PURPLE_IMPLEMENT_INTERFACE_STATIC(PURPLE_TYPE_PROTOCOL_ROOMLIST_IFACE,
-	                                  facebook_protocol_roomlist_iface_init)
-);
-
-static void
 fb_cmds_register(void)
 {
 	PurpleCmdId id;
@@ -1030,13 +940,13 @@
 	g_return_if_fail(fb_cmds == NULL);
 
 	id = purple_cmd_register("kick", "s", PURPLE_CMD_P_PROTOCOL, cflags,
-				 fb_protocol->id, fb_cmd_kick,
+				 "prpl-facebook", fb_cmd_kick,
 				 _("kick: Kick someone from the chat"),
 				 NULL);
 	fb_cmds = g_slist_prepend(fb_cmds, GUINT_TO_POINTER(id));
 
 	id = purple_cmd_register("leave", "", PURPLE_CMD_P_PROTOCOL, cflags,
-				 fb_protocol->id, fb_cmd_leave,
+				 "prpl-facebook", fb_cmd_leave,
 				 _("leave: Leave the chat"),
 				 NULL);
 	fb_cmds = g_slist_prepend(fb_cmds, GUINT_TO_POINTER(id));
@@ -1055,43 +965,91 @@
 	g_slist_free_full(fb_cmds, fb_cmds_unregister_free);
 }
 
-static PurplePluginInfo *
-plugin_query(GError **error)
+static gboolean
+plugin_load(PurplePlugin *plugin)
 {
-	return purple_plugin_info_new(
-		"id",          "prpl-facebook",
-		"name",        "Facebook Protocol",
-		"version",     DISPLAY_VERSION,
-		"category",    N_("Protocol"),
-		"summary",     N_("Facebook Protocol Plugin"),
-		"description", N_("Facebook Protocol Plugin"),
-		"website",     PURPLE_WEBSITE,
-		"abi-version", PURPLE_ABI_VERSION,
-		"flags",       PURPLE_PLUGIN_INFO_FLAGS_INTERNAL |
-		               PURPLE_PLUGIN_INFO_FLAGS_AUTO_LOAD,
-		NULL
-	);
-}
-
-static gboolean
-plugin_load(PurplePlugin *plugin, GError **error)
-{
-	facebook_protocol_register_type(plugin);
-	fb_protocol = purple_protocols_add(FACEBOOK_TYPE_PROTOCOL, error);
-
-	if (fb_protocol == NULL) {
-		return FALSE;
-	}
-
 	fb_cmds_register();
+	_purple_socket_init();
+	purple_http_init();
 	return TRUE;
 }
 
 static gboolean
-plugin_unload(PurplePlugin *plugin, GError **error)
+plugin_unload(PurplePlugin *plugin)
 {
 	fb_cmds_unregister();
-	return purple_protocols_remove(fb_protocol, error);
+	purple_http_uninit();
+	_purple_socket_uninit();
+	return TRUE;
 }
 
-PURPLE_PLUGIN_INIT(facebook, plugin_query, plugin_load, plugin_unload);
+G_MODULE_EXPORT gboolean
+purple_init_plugin(PurplePlugin *plugin);
+
+G_MODULE_EXPORT gboolean
+purple_init_plugin(PurplePlugin *plugin)
+{
+	GList *opts = NULL;
+	PurpleAccountOption *opt;
+
+	static gboolean inited = FALSE;
+	static PurplePluginInfo info;
+	static PurplePluginProtocolInfo pinfo;
+
+	plugin->info = &info;
+
+	if (G_LIKELY(inited)) {
+		return purple_plugin_register(plugin);
+	}
+
+	memset(&info, 0, sizeof info);
+	memset(&pinfo, 0, sizeof pinfo);
+
+	info.magic         = PURPLE_PLUGIN_MAGIC;
+	info.major_version = PURPLE_MAJOR_VERSION;
+	info.minor_version = PURPLE_MINOR_VERSION;
+	info.type          = PURPLE_PLUGIN_PROTOCOL;
+	info.priority      = PURPLE_PRIORITY_DEFAULT;
+	info.id            = "prpl-facebook";
+	info.name          = "Facebook";
+	info.version       = PACKAGE_VERSION;
+	info.summary       = N_("Facebook Protocol Plugin");
+	info.description   = N_("Facebook Protocol Plugin");
+	info.homepage      = PACKAGE_URL;
+	info.load          = plugin_load;
+	info.unload        = plugin_unload;
+	info.extra_info    = &pinfo;
+
+	pinfo.options            = OPT_PROTO_CHAT_TOPIC;
+	pinfo.list_icon          = fb_list_icon;
+	pinfo.status_types       = fb_status_types;
+	pinfo.blist_node_menu    = fb_client_blist_node_menu;
+	pinfo.chat_info          = fb_chat_info;
+	pinfo.chat_info_defaults = fb_chat_info_defaults;
+	pinfo.login              = fb_login;
+	pinfo.close              = fb_close;
+	pinfo.send_im            = fb_im_send;
+	pinfo.send_typing        = fb_im_send_typing;
+	pinfo.join_chat          = fb_chat_join;
+	pinfo.get_chat_name      = fb_chat_get_name;
+	pinfo.chat_invite        = fb_chat_invite;
+	pinfo.chat_send          = fb_chat_send;
+	pinfo.set_chat_topic     = fb_chat_set_topic;
+	pinfo.roomlist_get_list  = fb_roomlist_get_list;
+	pinfo.roomlist_cancel    = fb_roomlist_cancel;
+	pinfo.offline_message    = fb_client_offline_message;
+	pinfo.struct_size        = sizeof pinfo;
+
+	opt = purple_account_option_bool_new(_("Mark messages as read"),
+	                                     "mark-read", TRUE);
+	opts = g_list_prepend(opts, opt);
+
+	opt = purple_account_option_bool_new(_("Open new group chats with "
+	                                       "incoming messages"),
+	                                     "group-chat-open", TRUE);
+	opts = g_list_prepend(opts, opt);
+	pinfo.protocol_options = g_list_reverse(opts);
+
+	inited = TRUE;
+	return purple_plugin_register(plugin);
+}
diff -r f80258f7ce6f libpurple/protocols/facebook/facebook.h
--- a/libpurple/protocols/facebook/facebook.h	Sun Jul 26 16:51:03 2015 -0400
+++ b/libpurple/protocols/facebook/facebook.h	Sun Jul 26 21:11:03 2015 -0400
@@ -25,29 +25,4 @@
 #include "glibcompat.h"
 #include "protocol.h"
 
-#define FACEBOOK_TYPE_PROTOCOL             (facebook_protocol_get_type())
-#define FACEBOOK_PROTOCOL(obj)             (G_TYPE_CHECK_INSTANCE_CAST((obj), FACEBOOK_TYPE_PROTOCOL, FacebookProtocol))
-#define FACEBOOK_PROTOCOL_CLASS(klass)     (G_TYPE_CHECK_CLASS_CAST((klass), FACEBOOK_TYPE_PROTOCOL, FacebookProtocolClass))
-#define FACEBOOK_IS_PROTOCOL(obj)          (G_TYPE_CHECK_INSTANCE_TYPE((obj), FACEBOOK_TYPE_PROTOCOL))
-#define FACEBOOK_IS_PROTOCOL_CLASS(klass)  (G_TYPE_CHECK_CLASS_TYPE((klass), FACEBOOK_TYPE_PROTOCOL))
-#define FACEBOOK_PROTOCOL_GET_CLASS(obj)   (G_TYPE_INSTANCE_GET_CLASS((obj), FACEBOOK_TYPE_PROTOCOL, FacebookProtocolClass))
-
-typedef struct _FacebookProtocol FacebookProtocol;
-typedef struct _FacebookProtocolClass FacebookProtocolClass;
-
-struct _FacebookProtocol
-{
-	PurpleProtocol parent;
-};
-
-struct _FacebookProtocolClass
-{
-	PurpleProtocolClass parent_class;
-};
-
-/**
- * Returns the GType for the FacebookProtocol object.
- */
-G_MODULE_EXPORT GType facebook_protocol_get_type(void);
-
 #endif /* _FACEBOOK_H_ */
